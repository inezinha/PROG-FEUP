3.2 a)

#include <iostream>
#include <cmath>

using namespace std;

bool isPrime(int n) {
    int i;
    for (i = 2; i <= sqrt(n); i++) {
        if (n % i == 0) {
            return false;
        }
    }
    if (i > sqrt(n)) {
        return true;
    }
}

int main() {
    int n;
    cout << "Enter a number: "; cin >> n;
    if (isPrime(n))
        cout << "The number "<<n<<" is prime";
    else
        cout<<"The number "<<n<<" is not prime";
        
    return 0;
}

----------------------------------------------------------

3.2 b)

#include <iostream>
#include <cmath>

using namespace std;

bool isPrime(int n) {
    int i;
    for (i = 2; i <= sqrt(n); i++) {
        if (n % i == 0) {
            return false;
        }
    }
    if (i > sqrt(n)) {
        return true;
    }
}

int main() {
    for (int i=2;i<1000;i++){
        if (isPrime(i)){
            cout<<i<<" ";
        }
    }
    return 0;
}

--------------------------------------------------------------

3.2 c)

#include <iostream>
#include <cmath>
using namespace std;

bool isPrime(int n) {
    int i;
    for (i = 2; i <= sqrt(n); i++) {
        if (n % i == 0) {
            return false;
        }
    }
    if (i > sqrt(n)) {
        return true;
    }
}

int main() {
    int i = 2, count = 0;
    while(count<=100){
        if (isPrime(i)){
            cout<<i<<" ";
            count++;
        }
        i++;
    }
    return 0;
}

----------------------------------------------------------------

3.2 d)

#include <iostream>
#include <cmath>
using namespace std;

bool isPrime(int n) {
    int i;
    for (i = 2; i <= sqrt(n); i++) {
        if (n % i == 0) {
            return false;
        }
    }
    if (i > sqrt(n)) {
        return true;
    }
}

int main() {
    const int sizel = pow(2,sizeof(unsigned long)*8);
    for (int i=sizel; i>=0; i--){
        if (isPrime(i))
            cout <<i;
            break;
    }
    return 0;
}
