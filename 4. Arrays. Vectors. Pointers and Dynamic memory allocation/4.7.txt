4.7 ab)

#include <iomanip>
#include <iostream>
#include <vector>

using namespace std;

void localMax(int a[][5], int NE){
    for (int row=1;row<NE-1;row++){
        for (int column=1; column<NE-1;column++){ //estes dois for Ã© para iterar pela matriz
            if (a[row][column]>a[row][column-1] && a[row][column]>a[row][column+1] && a[row][column]>a[row+1][column] && a[row][column]>a[row-1][column] && a[row][column]>a[row+1][column+1] && a[row][column]>a[row-1][column+1] && a[row][column]>a[row+1][column-1]&& a[row][column]>a[row-1][column-1]){
                cout << "The number: "<<a[row][column]<<" on the "<<row<<" row and on the "<<column<<" column is a local Max :D"<<endl;
            }
        }
    }
}

int main()
{
    int matrix[5][5]={{7,3,4,1,3},{2,9,6,2,1},{1,3,5,1,4},{6,5,2,7,5},{4,2,1,3,6}};
    localMax(matrix,5);
    return 0;
}

-----------------------------------------------------------------------------------------------------------------------------------------------------

4.7 c)

#include <iostream>
#include <iomanip>
#include <iostream>
#include <vector>

using namespace std;

void localMax(vector<vector<int>>a, string y){
    if (y == "no"){  // NOT ANY ELEMENT CAN BE A LOCAL MAX
        for (int row=1;row<a.size()-1;row++){
            for (int column=1; column<a[row].size()-1;column++){ //estes dois for Ã© para iterar pela matriz
                if (a[row][column]>a[row][column-1] && a[row][column]>a[row][column+1] && a[row][column]>a[row+1][column] && a[row][column]>a[row-1][column] && a[row][column]>a[row+1][column+1] && a[row][column]>a[row-1][column+1] && a[row][column]>a[row+1][column-1]&& a[row][column]>a[row-1][column-1]){
                    cout << "The number: "<<a[row][column]<<" on the "<<row<<" row and on the "<<column<<" column is a local Max ðŸ˜€"<<endl;
                }
            }
        }
    }
    else if ( y == "yes"){  // YEEEES ANY ELEMENT CAN BE A LOCAL MAX :D
        for (int row=0;row<a.size();row++){
            for (int column=0; column<a.size();column++){ //estes dois for Ã© para iterar pela matriz

                if(row==0 && column==0){
                    if(a[row][column]>a[row][column+1] && a[row][column]>a[row+1][column] && a[row][column]>a[row+1][column+1]){
                        cout << "The number: "<<a[row][column]<<" on the "<<row<<" row and on the "<<column<<" column is a local Max :D"<<endl;
                    }
                }

                else if( row==0 && column>0 && column<a.size()-1){
                    if(a[row][column]>a[row+1][column] && a[row][column]>a[row+1][column-1] && a[row][column]>a[row][column-1] && a[row][column]>a[row+1][column+1] && a[row][column]>a[row][column+1]){
                        cout << "The number: "<<a[row][column]<<" on the "<<row<<" row and on the "<<column<<" column is a local Max :D"<<endl;
                    }
                }

                else if (row == 0 && column == a.size()-1){
                    if(a[row][column]>a[row][column-1] && a[row][column]>a[row+1][column] && a[row][column]>a[row+1][column-1]){
                        cout << "The number: "<<a[row][column]<<" on the "<<row<<" row and on the "<<column<<" column is a local Max :D"<<endl;
                    }
                }

                else if (row <a.size()-1 && column == 0){
                    if(a[row][column]>a[row-1][column] && a[row][column]>a[row-1][column+1] && a[row][column]>a[row][column+1] && a[row][column]>a[row+1][column] && a[row][column]>a[row+1][column+1]){
                        cout << "The number: "<<a[row][column]<<" on the "<<row<<" row and on the "<<column<<" column is a local Max :D"<<endl;
                    }
                }

                else if( row==a.size()-1 && column==0){
                    if(a[row][column]>a[row-1][column] && a[row][column]>a[row-1][column+1] && a[row][column]>a[row][column+1]){
                        cout << "The number: "<<a[row][column]<<" on the "<<row<<" row and on the "<<column<<" column is a local Max :D"<<endl;
                    }
                }

                else if( row==a.size()-1 && column>0 && column<a.size()-1){
                    if(a[row][column]>a[row-1][column] && a[row][column]>a[row-1][column-1] && a[row][column]>a[row][column-1] && a[row][column]>a[row-1][column+1] && a[row][column]>a[row][column+1]){
                        cout << "The number: "<<a[row][column]<<" on the "<<row<<" row and on the "<<column<<" column is a local Max :D"<<endl;
                    }
                }

                else if (row == a.size()-1 && column == a.size()-1){
                    if(a[row][column]>a[row-1][column] && a[row][column]>a[row-1][column-1] && a[row][column]>a[row][column-1]){
                        cout << "The number: "<<a[row][column]<<" on the "<<row<<" row and on the "<<column<<" column is a local Max :D"<<endl;
                    }
                }

                else if( row>0 && row<a.size()-1 && column == a.size()-1){
                    if(a[row][column]>a[row-1][column] && a[row][column]>a[row-1][column-1] && a[row][column]>a[row][column-1] && a[row][column]>a[row+1][column-1] && a[row][column]>a[row+1][column]){
                        cout << "The number: "<<a[row][column]<<" on the "<<row<<" row and on the "<<column<<" column is a local Max :D"<<endl;
                    }
                }

                else{
                    if (a[row][column]>a[row][column-1] && a[row][column]>a[row][column+1] && a[row][column]>a[row+1][column] && a[row][column]>a[row-1][column] && a[row][column]>a[row+1][column+1] && a[row][column]>a[row-1][column+1] && a[row][column]>a[row+1][column-1]&& a[row][column]>a[row-1][column-1]){
                        cout << "The number: "<<a[row][column]<<" on the "<<row<<" row and on the "<<column<<" column is a local Max :D"<<endl;
                    }
                }

            }
        }
    }
}
int main()
{
    string y = "yes"; //"yes" if any number can be a local max and "no" if not any number can be a local max
    vector<vector<int>>matrix = {{7,3,4,1,3,4},{2,9,6,2,1,5},{1,3,5,1,4,5},{6,5,2,7,5,6},{4,2,1,3,6,7},{4,2,1,3,6,7}};
    localMax(matrix, y);
    return 0;
}